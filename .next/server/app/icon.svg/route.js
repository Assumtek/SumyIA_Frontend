(()=>{var U={};U.id=33,U.ids=[33],U.modules={399:U=>{"use strict";U.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:U=>{"use strict";U.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3460:(U,F,V)=>{"use strict";V.r(F),V.d(F,{originalPathname:()=>n,patchFetch:()=>k,requestAsyncStorage:()=>t,routeModule:()=>a,serverHooks:()=>T,staticGenerationAsyncStorage:()=>B});var Q={};V.r(Q),V.d(Q,{GET:()=>e,dynamic:()=>W});var R=V(9303),l=V(8716),d=V(670),N=V(3896);let Z=Buffer.from("","base64");function e(){return new N.NextResponse(Z,{headers:{"Content-Type":"image/svg+xml","Cache-Control":"public, immutable, no-transform, max-age=31536000"}})}let W="force-static",a=new R.AppRouteRouteModule({definition:{kind:l.x.APP_ROUTE,page:"/icon.svg/route",pathname:"/icon.svg",filename:"icon",bundlePath:"app/icon.svg/route"},resolvedPagePath:"next-metadata-route-loader?page=%2Ficon.svg%2Froute&filePath=C%3A%5CPrograma%C3%A7%C3%A3o%5CMVP%20Agendamento%5CFrontend%5Csrc%5Capp%5Cicon.svg&isDynamic=0!?__next_metadata_route__",nextConfigOutput:"",userland:Q}),{requestAsyncStorage:t,staticGenerationAsyncStorage:B,serverHooks:T}=a,n="/icon.svg/route";function k(){return(0,d.patchFetch)({serverHooks:T,staticGenerationAsyncStorage:B})}},6637:U=>{"use strict";var F=Object.defineProperty,V=Object.getOwnPropertyDescriptor,Q=Object.getOwnPropertyNames,R=Object.prototype.hasOwnProperty,l={};function d(U){var F;let V=["path"in U&&U.path&&`Path=${U.path}`,"expires"in U&&(U.expires||0===U.expires)&&`Expires=${("number"==typeof U.expires?new Date(U.expires):U.expires).toUTCString()}`,"maxAge"in U&&"number"==typeof U.maxAge&&`Max-Age=${U.maxAge}`,"domain"in U&&U.domain&&`Domain=${U.domain}`,"secure"in U&&U.secure&&"Secure","httpOnly"in U&&U.httpOnly&&"HttpOnly","sameSite"in U&&U.sameSite&&`SameSite=${U.sameSite}`,"partitioned"in U&&U.partitioned&&"Partitioned","priority"in U&&U.priority&&`Priority=${U.priority}`].filter(Boolean),Q=`${U.name}=${encodeURIComponent(null!=(F=U.value)?F:"")}`;return 0===V.length?Q:`${Q}; ${V.join("; ")}`}function N(U){let F=new Map;for(let V of U.split(/; */)){if(!V)continue;let U=V.indexOf("=");if(-1===U){F.set(V,"true");continue}let[Q,R]=[V.slice(0,U),V.slice(U+1)];try{F.set(Q,decodeURIComponent(null!=R?R:"true"))}catch{}}return F}function Z(U){var F,V;if(!U)return;let[[Q,R],...l]=N(U),{domain:d,expires:Z,httponly:a,maxage:t,path:B,samesite:T,secure:n,partitioned:k,priority:S}=Object.fromEntries(l.map(([U,F])=>[U.toLowerCase(),F]));return function(U){let F={};for(let V in U)U[V]&&(F[V]=U[V]);return F}({name:Q,value:decodeURIComponent(R),domain:d,...Z&&{expires:new Date(Z)},...a&&{httpOnly:!0},..."string"==typeof t&&{maxAge:Number(t)},path:B,...T&&{sameSite:e.includes(F=(F=T).toLowerCase())?F:void 0},...n&&{secure:!0},...S&&{priority:W.includes(V=(V=S).toLowerCase())?V:void 0},...k&&{partitioned:!0}})}((U,V)=>{for(var Q in V)F(U,Q,{get:V[Q],enumerable:!0})})(l,{RequestCookies:()=>a,ResponseCookies:()=>t,parseCookie:()=>N,parseSetCookie:()=>Z,stringifyCookie:()=>d}),U.exports=((U,l,d,N)=>{if(l&&"object"==typeof l||"function"==typeof l)for(let d of Q(l))R.call(U,d)||void 0===d||F(U,d,{get:()=>l[d],enumerable:!(N=V(l,d))||N.enumerable});return U})(F({},"__esModule",{value:!0}),l);var e=["strict","lax","none"],W=["low","medium","high"],a=class{constructor(U){this._parsed=new Map,this._headers=U;let F=U.get("cookie");if(F)for(let[U,V]of N(F))this._parsed.set(U,{name:U,value:V})}[Symbol.iterator](){return this._parsed[Symbol.iterator]()}get size(){return this._parsed.size}get(...U){let F="string"==typeof U[0]?U[0]:U[0].name;return this._parsed.get(F)}getAll(...U){var F;let V=Array.from(this._parsed);if(!U.length)return V.map(([U,F])=>F);let Q="string"==typeof U[0]?U[0]:null==(F=U[0])?void 0:F.name;return V.filter(([U])=>U===Q).map(([U,F])=>F)}has(U){return this._parsed.has(U)}set(...U){let[F,V]=1===U.length?[U[0].name,U[0].value]:U,Q=this._parsed;return Q.set(F,{name:F,value:V}),this._headers.set("cookie",Array.from(Q).map(([U,F])=>d(F)).join("; ")),this}delete(U){let F=this._parsed,V=Array.isArray(U)?U.map(U=>F.delete(U)):F.delete(U);return this._headers.set("cookie",Array.from(F).map(([U,F])=>d(F)).join("; ")),V}clear(){return this.delete(Array.from(this._parsed.keys())),this}[Symbol.for("edge-runtime.inspect.custom")](){return`RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`}toString(){return[...this._parsed.values()].map(U=>`${U.name}=${encodeURIComponent(U.value)}`).join("; ")}},t=class{constructor(U){var F,V,Q;this._parsed=new Map,this._headers=U;let R=null!=(Q=null!=(V=null==(F=U.getSetCookie)?void 0:F.call(U))?V:U.get("set-cookie"))?Q:[];for(let U of Array.isArray(R)?R:function(U){if(!U)return[];var F,V,Q,R,l,d=[],N=0;function Z(){for(;N<U.length&&/\s/.test(U.charAt(N));)N+=1;return N<U.length}for(;N<U.length;){for(F=N,l=!1;Z();)if(","===(V=U.charAt(N))){for(Q=N,N+=1,Z(),R=N;N<U.length&&"="!==(V=U.charAt(N))&&";"!==V&&","!==V;)N+=1;N<U.length&&"="===U.charAt(N)?(l=!0,N=R,d.push(U.substring(F,Q)),F=N):N=Q+1}else N+=1;(!l||N>=U.length)&&d.push(U.substring(F,U.length))}return d}(R)){let F=Z(U);F&&this._parsed.set(F.name,F)}}get(...U){let F="string"==typeof U[0]?U[0]:U[0].name;return this._parsed.get(F)}getAll(...U){var F;let V=Array.from(this._parsed.values());if(!U.length)return V;let Q="string"==typeof U[0]?U[0]:null==(F=U[0])?void 0:F.name;return V.filter(U=>U.name===Q)}has(U){return this._parsed.has(U)}set(...U){let[F,V,Q]=1===U.length?[U[0].name,U[0].value,U[0]]:U,R=this._parsed;return R.set(F,function(U={name:"",value:""}){return"number"==typeof U.expires&&(U.expires=new Date(U.expires)),U.maxAge&&(U.expires=new Date(Date.now()+1e3*U.maxAge)),(null===U.path||void 0===U.path)&&(U.path="/"),U}({name:F,value:V,...Q})),function(U,F){for(let[,V]of(F.delete("set-cookie"),U)){let U=d(V);F.append("set-cookie",U)}}(R,this._headers),this}delete(...U){let[F,V,Q]="string"==typeof U[0]?[U[0]]:[U[0].name,U[0].path,U[0].domain];return this.set({name:F,path:V,domain:Q,value:"",expires:new Date(0)})}[Symbol.for("edge-runtime.inspect.custom")](){return`ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`}toString(){return[...this._parsed.values()].map(d).join("; ")}}},2565:(U,F,V)=>{var Q;(()=>{var R={226:function(R,l){!function(d,N){"use strict";var Z="function",e="undefined",W="object",a="string",t="major",B="model",T="name",n="type",k="vendor",S="version",h="architecture",J="console",E="mobile",M="tablet",r="smarttv",c="wearable",m="embedded",p="Amazon",i="Apple",o="ASUS",b="BlackBerry",z="Browser",Y="Chrome",s="Firefox",G="Google",D="Huawei",x="Microsoft",j="Motorola",H="Opera",X="Samsung",O="Sharp",w="Sony",y="Xiaomi",u="Zebra",v="Facebook",C="Chromium OS",L="Mac OS",I=function(U,F){var V={};for(var Q in U)F[Q]&&F[Q].length%2==0?V[Q]=F[Q].concat(U[Q]):V[Q]=U[Q];return V},K=function(U){for(var F={},V=0;V<U.length;V++)F[U[V].toUpperCase()]=U[V];return F},g=function(U,F){return typeof U===a&&-1!==P(F).indexOf(P(U))},P=function(U){return U.toLowerCase()},f=function(U,F){if(typeof U===a)return U=U.replace(/^\s\s*/,""),typeof F===e?U:U.substring(0,350)},q=function(U,F){for(var V,Q,R,l,d,e,a=0;a<F.length&&!d;){var t=F[a],B=F[a+1];for(V=Q=0;V<t.length&&!d&&t[V];)if(d=t[V++].exec(U))for(R=0;R<B.length;R++)e=d[++Q],typeof(l=B[R])===W&&l.length>0?2===l.length?typeof l[1]==Z?this[l[0]]=l[1].call(this,e):this[l[0]]=l[1]:3===l.length?typeof l[1]!==Z||l[1].exec&&l[1].test?this[l[0]]=e?e.replace(l[1],l[2]):void 0:this[l[0]]=e?l[1].call(this,e,l[2]):void 0:4===l.length&&(this[l[0]]=e?l[3].call(this,e.replace(l[1],l[2])):void 0):this[l]=e||N;a+=2}},A=function(U,F){for(var V in F)if(typeof F[V]===W&&F[V].length>0){for(var Q=0;Q<F[V].length;Q++)if(g(F[V][Q],U))return"?"===V?N:V}else if(g(F[V],U))return"?"===V?N:V;return U},_={ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"},$={browser:[[/\b(?:crmo|crios)\/([\w\.]+)/i],[S,[T,"Chrome"]],[/edg(?:e|ios|a)?\/([\w\.]+)/i],[S,[T,"Edge"]],[/(opera mini)\/([-\w\.]+)/i,/(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,/(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],[T,S],[/opios[\/ ]+([\w\.]+)/i],[S,[T,H+" Mini"]],[/\bopr\/([\w\.]+)/i],[S,[T,H]],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\/ ]?([\w\.]*)/i,/(ba?idubrowser)[\/ ]?([\w\.]+)/i,/(?:ms|\()(ie) ([\w\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,/(heytap|ovi)browser\/([\d\.]+)/i,/(weibo)__([\d\.]+)/i],[T,S],[/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],[S,[T,"UC"+z]],[/microm.+\bqbcore\/([\w\.]+)/i,/\bqbcore\/([\w\.]+).+microm/i],[S,[T,"WeChat(Win) Desktop"]],[/micromessenger\/([\w\.]+)/i],[S,[T,"WeChat"]],[/konqueror\/([\w\.]+)/i],[S,[T,"Konqueror"]],[/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],[S,[T,"IE"]],[/ya(?:search)?browser\/([\w\.]+)/i],[S,[T,"Yandex"]],[/(avast|avg)\/([\w\.]+)/i],[[T,/(.+)/,"$1 Secure "+z],S],[/\bfocus\/([\w\.]+)/i],[S,[T,s+" Focus"]],[/\bopt\/([\w\.]+)/i],[S,[T,H+" Touch"]],[/coc_coc\w+\/([\w\.]+)/i],[S,[T,"Coc Coc"]],[/dolfin\/([\w\.]+)/i],[S,[T,"Dolphin"]],[/coast\/([\w\.]+)/i],[S,[T,H+" Coast"]],[/miuibrowser\/([\w\.]+)/i],[S,[T,"MIUI "+z]],[/fxios\/([-\w\.]+)/i],[S,[T,s]],[/\bqihu|(qi?ho?o?|360)browser/i],[[T,"360 "+z]],[/(oculus|samsung|sailfish|huawei)browser\/([\w\.]+)/i],[[T,/(.+)/,"$1 "+z],S],[/(comodo_dragon)\/([\w\.]+)/i],[[T,/_/g," "],S],[/(electron)\/([\w\.]+) safari/i,/(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\/ ]?([\w\.]+)/i],[T,S],[/(metasr)[\/ ]?([\w\.]+)/i,/(lbbrowser)/i,/\[(linkedin)app\]/i],[T],[/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],[[T,v],S],[/(kakao(?:talk|story))[\/ ]([\w\.]+)/i,/(naver)\(.*?(\d+\.[\w\.]+).*\)/i,/safari (line)\/([\w\.]+)/i,/\b(line)\/([\w\.]+)\/iab/i,/(chromium|instagram)[\/ ]([-\w\.]+)/i],[T,S],[/\bgsa\/([\w\.]+) .*safari\//i],[S,[T,"GSA"]],[/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],[S,[T,"TikTok"]],[/headlesschrome(?:\/([\w\.]+)| )/i],[S,[T,Y+" Headless"]],[/ wv\).+(chrome)\/([\w\.]+)/i],[[T,Y+" WebView"],S],[/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],[S,[T,"Android "+z]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],[T,S],[/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],[S,[T,"Mobile Safari"]],[/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],[S,T],[/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],[T,[S,A,{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}]],[/(webkit|khtml)\/([\w\.]+)/i],[T,S],[/(navigator|netscape\d?)\/([-\w\.]+)/i],[[T,"Netscape"],S],[/mobile vr; rv:([\w\.]+)\).+firefox/i],[S,[T,s+" Reality"]],[/ekiohf.+(flow)\/([\w\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,/(firefox)\/([\w\.]+)/i,/(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,/(links) \(([\w\.]+)/i,/panasonic;(viera)/i],[T,S],[/(cobalt)\/([\w\.]+)/i],[T,[S,/master.|lts./,""]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],[[h,"amd64"]],[/(ia32(?=;))/i],[[h,P]],[/((?:i[346]|x)86)[;\)]/i],[[h,"ia32"]],[/\b(aarch64|arm(v?8e?l?|_?64))\b/i],[[h,"arm64"]],[/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],[[h,"armhf"]],[/windows (ce|mobile); ppc;/i],[[h,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],[[h,/ower/,"",P]],[/(sun4\w)[;\)]/i],[[h,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],[[h,P]]],device:[[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],[B,[k,X],[n,M]],[/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,/samsung[- ]([-\w]+)/i,/sec-(sgh\w+)/i],[B,[k,X],[n,E]],[/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],[B,[k,i],[n,E]],[/\((ipad);[-\w\),; ]+apple/i,/applecoremedia\/[\w\.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i],[B,[k,i],[n,M]],[/(macintosh);/i],[B,[k,i]],[/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],[B,[k,O],[n,E]],[/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],[B,[k,D],[n,M]],[/(?:huawei|honor)([-\w ]+)[;\)]/i,/\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],[B,[k,D],[n,E]],[/\b(poco[\w ]+)(?: bui|\))/i,/\b; (\w+) build\/hm\1/i,/\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,/\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,/\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i],[[B,/_/g," "],[k,y],[n,E]],[/\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],[[B,/_/g," "],[k,y],[n,M]],[/; (\w+) bui.+ oppo/i,/\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],[B,[k,"OPPO"],[n,E]],[/vivo (\w+)(?: bui|\))/i,/\b(v[12]\d{3}\w?[at])(?: bui|;)/i],[B,[k,"Vivo"],[n,E]],[/\b(rmx[12]\d{3})(?: bui|;|\))/i],[B,[k,"Realme"],[n,E]],[/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,/\bmot(?:orola)?[- ](\w*)/i,/((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],[B,[k,j],[n,E]],[/\b(mz60\d|xoom[2 ]{0,2}) build\//i],[B,[k,j],[n,M]],[/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],[B,[k,"LG"],[n,M]],[/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,/\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,/\blg-?([\d\w]+) bui/i],[B,[k,"LG"],[n,E]],[/(ideatab[-\w ]+)/i,/lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],[B,[k,"Lenovo"],[n,M]],[/(?:maemo|nokia).*(n900|lumia \d+)/i,/nokia[-_ ]?([-\w\.]*)/i],[[B,/_/g," "],[k,"Nokia"],[n,E]],[/(pixel c)\b/i],[B,[k,G],[n,M]],[/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],[B,[k,G],[n,E]],[/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[B,[k,w],[n,E]],[/sony tablet [ps]/i,/\b(?:sony)?sgp\w+(?: bui|\))/i],[[B,"Xperia Tablet"],[k,w],[n,M]],[/ (kb2005|in20[12]5|be20[12][59])\b/i,/(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],[B,[k,"OnePlus"],[n,E]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i,/(kf[a-z]+)( bui|\)).+silk\//i],[B,[k,p],[n,M]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],[[B,/(.+)/g,"Fire Phone $1"],[k,p],[n,E]],[/(playbook);[-\w\),; ]+(rim)/i],[B,k,[n,M]],[/\b((?:bb[a-f]|st[hv])100-\d)/i,/\(bb10; (\w+)/i],[B,[k,b],[n,E]],[/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],[B,[k,o],[n,M]],[/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],[B,[k,o],[n,E]],[/(nexus 9)/i],[B,[k,"HTC"],[n,M]],[/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,/(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],[k,[B,/_/g," "],[n,E]],[/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],[B,[k,"Acer"],[n,M]],[/droid.+; (m[1-5] note) bui/i,/\bmz-([-\w]{2,})/i],[B,[k,"Meizu"],[n,E]],[/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\w]*)/i,/(hp) ([\w ]+\w)/i,/(asus)-?(\w+)/i,/(microsoft); (lumia[\w ]+)/i,/(lenovo)[-_ ]?([-\w]+)/i,/(jolla)/i,/(oppo) ?([\w ]+) bui/i],[k,B,[n,E]],[/(kobo)\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\/([\w\.]+)/i,/(nook)[\w ]+build\/(\w+)/i,/(dell) (strea[kpr\d ]*[\dko])/i,/(le[- ]+pan)[- ]+(\w{1,9}) bui/i,/(trinity)[- ]*(t\d{3}) bui/i,/(gigaset)[- ]+(q\w{1,9}) bui/i,/(vodafone) ([\w ]+)(?:\)| bui)/i],[k,B,[n,M]],[/(surface duo)/i],[B,[k,x],[n,M]],[/droid [\d\.]+; (fp\du?)(?: b|\))/i],[B,[k,"Fairphone"],[n,E]],[/(u304aa)/i],[B,[k,"AT&T"],[n,E]],[/\bsie-(\w*)/i],[B,[k,"Siemens"],[n,E]],[/\b(rct\w+) b/i],[B,[k,"RCA"],[n,M]],[/\b(venue[\d ]{2,7}) b/i],[B,[k,"Dell"],[n,M]],[/\b(q(?:mv|ta)\w+) b/i],[B,[k,"Verizon"],[n,M]],[/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],[B,[k,"Barnes & Noble"],[n,M]],[/\b(tm\d{3}\w+) b/i],[B,[k,"NuVision"],[n,M]],[/\b(k88) b/i],[B,[k,"ZTE"],[n,M]],[/\b(nx\d{3}j) b/i],[B,[k,"ZTE"],[n,E]],[/\b(gen\d{3}) b.+49h/i],[B,[k,"Swiss"],[n,E]],[/\b(zur\d{3}) b/i],[B,[k,"Swiss"],[n,M]],[/\b((zeki)?tb.*\b) b/i],[B,[k,"Zeki"],[n,M]],[/\b([yr]\d{2}) b/i,/\b(dragon[- ]+touch |dt)(\w{5}) b/i],[[k,"Dragon Touch"],B,[n,M]],[/\b(ns-?\w{0,9}) b/i],[B,[k,"Insignia"],[n,M]],[/\b((nxa|next)-?\w{0,9}) b/i],[B,[k,"NextBook"],[n,M]],[/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[k,"Voice"],B,[n,E]],[/\b(lvtel\-)?(v1[12]) b/i],[[k,"LvTel"],B,[n,E]],[/\b(ph-1) /i],[B,[k,"Essential"],[n,E]],[/\b(v(100md|700na|7011|917g).*\b) b/i],[B,[k,"Envizen"],[n,M]],[/\b(trio[-\w\. ]+) b/i],[B,[k,"MachSpeed"],[n,M]],[/\btu_(1491) b/i],[B,[k,"Rotor"],[n,M]],[/(shield[\w ]+) b/i],[B,[k,"Nvidia"],[n,M]],[/(sprint) (\w+)/i],[k,B,[n,E]],[/(kin\.[onetw]{3})/i],[[B,/\./g," "],[k,x],[n,E]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],[B,[k,u],[n,M]],[/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],[B,[k,u],[n,E]],[/smart-tv.+(samsung)/i],[k,[n,r]],[/hbbtv.+maple;(\d+)/i],[[B,/^/,"SmartTV"],[k,X],[n,r]],[/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],[[k,"LG"],[n,r]],[/(apple) ?tv/i],[k,[B,i+" TV"],[n,r]],[/crkey/i],[[B,Y+"cast"],[k,G],[n,r]],[/droid.+aft(\w)( bui|\))/i],[B,[k,p],[n,r]],[/\(dtv[\);].+(aquos)/i,/(aquos-tv[\w ]+)\)/i],[B,[k,O],[n,r]],[/(bravia[\w ]+)( bui|\))/i],[B,[k,w],[n,r]],[/(mitv-\w{5}) bui/i],[B,[k,y],[n,r]],[/Hbbtv.*(technisat) (.*);/i],[k,B,[n,r]],[/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,/hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],[[k,f],[B,f],[n,r]],[/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],[[n,r]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[k,B,[n,J]],[/droid.+; (shield) bui/i],[B,[k,"Nvidia"],[n,J]],[/(playstation [345portablevi]+)/i],[B,[k,w],[n,J]],[/\b(xbox(?: one)?(?!; xbox))[\); ]/i],[B,[k,x],[n,J]],[/((pebble))app/i],[k,B,[n,c]],[/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],[B,[k,i],[n,c]],[/droid.+; (glass) \d/i],[B,[k,G],[n,c]],[/droid.+; (wt63?0{2,3})\)/i],[B,[k,u],[n,c]],[/(quest( 2| pro)?)/i],[B,[k,v],[n,c]],[/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],[k,[n,m]],[/(aeobc)\b/i],[B,[k,p],[n,m]],[/droid .+?; ([^;]+?)(?: bui|\) applew).+? mobile safari/i],[B,[n,E]],[/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],[B,[n,M]],[/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],[[n,M]],[/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],[[n,E]],[/(android[-\w\. ]{0,9});.+buil/i],[B,[k,"Generic"]]],engine:[[/windows.+ edge\/([\w\.]+)/i],[S,[T,"EdgeHTML"]],[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],[S,[T,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,/ekioh(flow)\/([\w\.]+)/i,/(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,/(icab)[\/ ]([23]\.[\d\.]+)/i,/\b(libweb)/i],[T,S],[/rv\:([\w\.]{1,9})\b.+(gecko)/i],[S,T]],os:[[/microsoft (windows) (vista|xp)/i],[T,S],[/(windows) nt 6\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i,/(windows)[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i],[T,[S,A,_]],[/(win(?=3|9|n)|win 9x )([nt\d\.]+)/i],[[T,"Windows"],[S,A,_]],[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/ios;fbsv\/([\d\.]+)/i,/cfnetwork\/.+darwin/i],[[S,/_/g,"."],[T,"iOS"]],[/(mac os x) ?([\w\. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i],[[T,L],[S,/_/g,"."]],[/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],[S,T],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,/(blackberry)\w*\/([\w\.]*)/i,/(tizen|kaios)[\/ ]([\w\.]+)/i,/\((series40);/i],[T,S],[/\(bb(10);/i],[S,[T,b]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],[S,[T,"Symbian"]],[/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],[S,[T,s+" OS"]],[/web0s;.+rt(tv)/i,/\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],[S,[T,"webOS"]],[/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],[S,[T,"watchOS"]],[/crkey\/([\d\.]+)/i],[S,[T,Y+"cast"]],[/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],[[T,C],S],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\/(\d+\.[\w\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\);]+)/i,/\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,/(mint)[\/\(\) ]?(\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,/(hurd|linux) ?([\w\.]*)/i,/(gnu) ?([\w\.]*)/i,/\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,/(haiku) (\w+)/i],[T,S],[/(sunos) ?([\w\.\d]*)/i],[[T,"Solaris"],S],[/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,/(aix) ((\d)(?=\.|\)| )[\w\.])*/i,/\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\w\.]*)/i],[T,S]]},UU=function(U,F){if(typeof U===W&&(F=U,U=N),!(this instanceof UU))return new UU(U,F).getResult();var V=typeof d!==e&&d.navigator?d.navigator:N,Q=U||(V&&V.userAgent?V.userAgent:""),R=V&&V.userAgentData?V.userAgentData:N,l=F?I($,F):$,J=V&&V.userAgent==Q;return this.getBrowser=function(){var U,F={};return F[T]=N,F[S]=N,q.call(F,Q,l.browser),F[t]=typeof(U=F[S])===a?U.replace(/[^\d\.]/g,"").split(".")[0]:N,J&&V&&V.brave&&typeof V.brave.isBrave==Z&&(F[T]="Brave"),F},this.getCPU=function(){var U={};return U[h]=N,q.call(U,Q,l.cpu),U},this.getDevice=function(){var U={};return U[k]=N,U[B]=N,U[n]=N,q.call(U,Q,l.device),J&&!U[n]&&R&&R.mobile&&(U[n]=E),J&&"Macintosh"==U[B]&&V&&typeof V.standalone!==e&&V.maxTouchPoints&&V.maxTouchPoints>2&&(U[B]="iPad",U[n]=M),U},this.getEngine=function(){var U={};return U[T]=N,U[S]=N,q.call(U,Q,l.engine),U},this.getOS=function(){var U={};return U[T]=N,U[S]=N,q.call(U,Q,l.os),J&&!U[T]&&R&&"Unknown"!=R.platform&&(U[T]=R.platform.replace(/chrome os/i,C).replace(/macos/i,L)),U},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return Q},this.setUA=function(U){return Q=typeof U===a&&U.length>350?f(U,350):U,this},this.setUA(Q),this};UU.VERSION="1.0.35",UU.BROWSER=K([T,S,t]),UU.CPU=K([h]),UU.DEVICE=K([B,k,n,J,E,r,M,c,m]),UU.ENGINE=UU.OS=K([T,S]),typeof l!==e?(R.exports&&(l=R.exports=UU),l.UAParser=UU):V.amdO?void 0!==(Q=(function(){return UU}).call(F,V,F,U))&&(U.exports=Q):typeof d!==e&&(d.UAParser=UU);var UF=typeof d!==e&&(d.jQuery||d.Zepto);if(UF&&!UF.ua){var UV=new UU;UF.ua=UV.getResult(),UF.ua.get=function(){return UV.getUA()},UF.ua.set=function(U){UV.setUA(U);var F=UV.getResult();for(var V in F)UF.ua[V]=F[V]}}}("object"==typeof window?window:this)}},l={};function d(U){var F=l[U];if(void 0!==F)return F.exports;var V=l[U]={exports:{}},Q=!0;try{R[U].call(V.exports,V,V.exports,d),Q=!1}finally{Q&&delete l[U]}return V.exports}d.ab=__dirname+"/";var N=d(226);U.exports=N})()},9303:(U,F,V)=>{"use strict";U.exports=V(517)},6294:(U,F)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{PageSignatureError:function(){return V},RemovedPageError:function(){return Q},RemovedUAError:function(){return R}});class V extends Error{constructor({page:U}){super(`The middleware "${U}" accepts an async API directly with the form:
  
  export function middleware(request, event) {
    return NextResponse.redirect('/new-location')
  }
  
  Read more: https://nextjs.org/docs/messages/middleware-new-signature
  `)}}class Q extends Error{constructor(){super(`The request.page has been deprecated in favour of \`URLPattern\`.
  Read more: https://nextjs.org/docs/messages/middleware-request-page
  `)}}class R extends Error{constructor(){super(`The request.ua has been removed in favour of \`userAgent\` function.
  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent
  `)}}},3896:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{ImageResponse:function(){return Q.ImageResponse},NextRequest:function(){return R.NextRequest},NextResponse:function(){return l.NextResponse},URLPattern:function(){return N.URLPattern},userAgent:function(){return d.userAgent},userAgentFromString:function(){return d.userAgentFromString}});let Q=V(6274),R=V(9253),l=V(6716),d=V(27),N=V(7718)},2420:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"NextURL",{enumerable:!0,get:function(){return W}});let Q=V(7176),R=V(1704),l=V(8614),d=V(5393),N=/(?!^https?:\/\/)(127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\[::1\]|localhost)/;function Z(U,F){return new URL(String(U).replace(N,"localhost"),F&&String(F).replace(N,"localhost"))}let e=Symbol("NextURLInternal");class W{constructor(U,F,V){let Q,R;"object"==typeof F&&"pathname"in F||"string"==typeof F?(Q=F,R=V||{}):R=V||F||{},this[e]={url:Z(U,Q??R.base),options:R,basePath:""},this.analyze()}analyze(){var U,F,V,R,N;let Z=(0,d.getNextPathnameInfo)(this[e].url.pathname,{nextConfig:this[e].options.nextConfig,parseData:!0,i18nProvider:this[e].options.i18nProvider}),W=(0,l.getHostname)(this[e].url,this[e].options.headers);this[e].domainLocale=this[e].options.i18nProvider?this[e].options.i18nProvider.detectDomainLocale(W):(0,Q.detectDomainLocale)(null==(F=this[e].options.nextConfig)?void 0:null==(U=F.i18n)?void 0:U.domains,W);let a=(null==(V=this[e].domainLocale)?void 0:V.defaultLocale)||(null==(N=this[e].options.nextConfig)?void 0:null==(R=N.i18n)?void 0:R.defaultLocale);this[e].url.pathname=Z.pathname,this[e].defaultLocale=a,this[e].basePath=Z.basePath??"",this[e].buildId=Z.buildId,this[e].locale=Z.locale??a,this[e].trailingSlash=Z.trailingSlash}formatPathname(){return(0,R.formatNextPathnameInfo)({basePath:this[e].basePath,buildId:this[e].buildId,defaultLocale:this[e].options.forceLocale?void 0:this[e].defaultLocale,locale:this[e].locale,pathname:this[e].url.pathname,trailingSlash:this[e].trailingSlash})}formatSearch(){return this[e].url.search}get buildId(){return this[e].buildId}set buildId(U){this[e].buildId=U}get locale(){return this[e].locale??""}set locale(U){var F,V;if(!this[e].locale||!(null==(V=this[e].options.nextConfig)?void 0:null==(F=V.i18n)?void 0:F.locales.includes(U)))throw TypeError(`The NextURL configuration includes no locale "${U}"`);this[e].locale=U}get defaultLocale(){return this[e].defaultLocale}get domainLocale(){return this[e].domainLocale}get searchParams(){return this[e].url.searchParams}get host(){return this[e].url.host}set host(U){this[e].url.host=U}get hostname(){return this[e].url.hostname}set hostname(U){this[e].url.hostname=U}get port(){return this[e].url.port}set port(U){this[e].url.port=U}get protocol(){return this[e].url.protocol}set protocol(U){this[e].url.protocol=U}get href(){let U=this.formatPathname(),F=this.formatSearch();return`${this.protocol}//${this.host}${U}${F}${this.hash}`}set href(U){this[e].url=Z(U),this.analyze()}get origin(){return this[e].url.origin}get pathname(){return this[e].url.pathname}set pathname(U){this[e].url.pathname=U}get hash(){return this[e].url.hash}set hash(U){this[e].url.hash=U}get search(){return this[e].url.search}set search(U){this[e].url.search=U}get password(){return this[e].url.password}set password(U){this[e].url.password=U}get username(){return this[e].url.username}set username(U){this[e].url.username=U}get basePath(){return this[e].basePath}set basePath(U){this[e].basePath=U.startsWith("/")?U:`/${U}`}toString(){return this.href}toJSON(){return this.href}[Symbol.for("edge-runtime.inspect.custom")](){return{href:this.href,origin:this.origin,protocol:this.protocol,username:this.username,password:this.password,host:this.host,hostname:this.hostname,port:this.port,pathname:this.pathname,search:this.search,searchParams:this.searchParams,hash:this.hash}}clone(){return new W(String(this),this[e].options)}}},127:(U,F)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"ReflectAdapter",{enumerable:!0,get:function(){return V}});class V{static get(U,F,V){let Q=Reflect.get(U,F,V);return"function"==typeof Q?Q.bind(U):Q}static set(U,F,V,Q){return Reflect.set(U,F,V,Q)}static has(U,F){return Reflect.has(U,F)}static deleteProperty(U,F){return Reflect.deleteProperty(U,F)}}},2205:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{RequestCookies:function(){return Q.RequestCookies},ResponseCookies:function(){return Q.ResponseCookies},stringifyCookie:function(){return Q.stringifyCookie}});let Q=V(6637)},6274:(U,F)=>{"use strict";function V(){throw Error('ImageResponse moved from "next/server" to "next/og" since Next.js 14, please import from "next/og" instead')}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"ImageResponse",{enumerable:!0,get:function(){return V}})},9253:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{INTERNALS:function(){return N},NextRequest:function(){return Z}});let Q=V(2420),R=V(5724),l=V(6294),d=V(2205),N=Symbol("internal request");class Z extends Request{constructor(U,F={}){let V="string"!=typeof U&&"url"in U?U.url:String(U);(0,R.validateURL)(V),U instanceof Request?super(U,F):super(V,F);let l=new Q.NextURL(V,{headers:(0,R.toNodeOutgoingHttpHeaders)(this.headers),nextConfig:F.nextConfig});this[N]={cookies:new d.RequestCookies(this.headers),geo:F.geo||{},ip:F.ip,nextUrl:l,url:l.toString()}}[Symbol.for("edge-runtime.inspect.custom")](){return{cookies:this.cookies,geo:this.geo,ip:this.ip,nextUrl:this.nextUrl,url:this.url,bodyUsed:this.bodyUsed,cache:this.cache,credentials:this.credentials,destination:this.destination,headers:Object.fromEntries(this.headers),integrity:this.integrity,keepalive:this.keepalive,method:this.method,mode:this.mode,redirect:this.redirect,referrer:this.referrer,referrerPolicy:this.referrerPolicy,signal:this.signal}}get cookies(){return this[N].cookies}get geo(){return this[N].geo}get ip(){return this[N].ip}get nextUrl(){return this[N].nextUrl}get page(){throw new l.RemovedPageError}get ua(){throw new l.RemovedUAError}get url(){return this[N].url}}},6716:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"NextResponse",{enumerable:!0,get:function(){return a}});let Q=V(2205),R=V(2420),l=V(5724),d=V(127),N=V(2205),Z=Symbol("internal response"),e=new Set([301,302,303,307,308]);function W(U,F){var V;if(null==U?void 0:null==(V=U.request)?void 0:V.headers){if(!(U.request.headers instanceof Headers))throw Error("request.headers must be an instance of Headers");let V=[];for(let[Q,R]of U.request.headers)F.set("x-middleware-request-"+Q,R),V.push(Q);F.set("x-middleware-override-headers",V.join(","))}}class a extends Response{constructor(U,F={}){super(U,F);let V=this.headers,e=new Proxy(new N.ResponseCookies(V),{get(U,R,l){switch(R){case"delete":case"set":return(...l)=>{let d=Reflect.apply(U[R],U,l),Z=new Headers(V);return d instanceof N.ResponseCookies&&V.set("x-middleware-set-cookie",d.getAll().map(U=>(0,Q.stringifyCookie)(U)).join(",")),W(F,Z),d};default:return d.ReflectAdapter.get(U,R,l)}}});this[Z]={cookies:e,url:F.url?new R.NextURL(F.url,{headers:(0,l.toNodeOutgoingHttpHeaders)(V),nextConfig:F.nextConfig}):void 0}}[Symbol.for("edge-runtime.inspect.custom")](){return{cookies:this.cookies,url:this.url,body:this.body,bodyUsed:this.bodyUsed,headers:Object.fromEntries(this.headers),ok:this.ok,redirected:this.redirected,status:this.status,statusText:this.statusText,type:this.type}}get cookies(){return this[Z].cookies}static json(U,F){let V=Response.json(U,F);return new a(V.body,V)}static redirect(U,F){let V="number"==typeof F?F:(null==F?void 0:F.status)??307;if(!e.has(V))throw RangeError('Failed to execute "redirect" on "response": Invalid status code');let Q="object"==typeof F?F:{},R=new Headers(null==Q?void 0:Q.headers);return R.set("Location",(0,l.validateURL)(U)),new a(null,{...Q,headers:R,status:V})}static rewrite(U,F){let V=new Headers(null==F?void 0:F.headers);return V.set("x-middleware-rewrite",(0,l.validateURL)(U)),W(F,V),new a(null,{...F,headers:V})}static next(U){let F=new Headers(null==U?void 0:U.headers);return F.set("x-middleware-next","1"),W(U,F),new a(null,{...U,headers:F})}}},7718:(U,F)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"URLPattern",{enumerable:!0,get:function(){return V}});let V="undefined"==typeof URLPattern?void 0:URLPattern},27:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{isBot:function(){return R},userAgent:function(){return d},userAgentFromString:function(){return l}});let Q=function(U){return U&&U.__esModule?U:{default:U}}(V(2565));function R(U){return/Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Google-InspectionTool|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(U)}function l(U){return{...(0,Q.default)(U),isBot:void 0!==U&&R(U)}}function d({headers:U}){return l(U.get("user-agent")||void 0)}},5724:(U,F)=>{"use strict";function V(U){let F=new Headers;for(let[V,Q]of Object.entries(U))for(let U of Array.isArray(Q)?Q:[Q])void 0!==U&&("number"==typeof U&&(U=U.toString()),F.append(V,U));return F}function Q(U){var F,V,Q,R,l,d=[],N=0;function Z(){for(;N<U.length&&/\s/.test(U.charAt(N));)N+=1;return N<U.length}for(;N<U.length;){for(F=N,l=!1;Z();)if(","===(V=U.charAt(N))){for(Q=N,N+=1,Z(),R=N;N<U.length&&"="!==(V=U.charAt(N))&&";"!==V&&","!==V;)N+=1;N<U.length&&"="===U.charAt(N)?(l=!0,N=R,d.push(U.substring(F,Q)),F=N):N=Q+1}else N+=1;(!l||N>=U.length)&&d.push(U.substring(F,U.length))}return d}function R(U){let F={},V=[];if(U)for(let[R,l]of U.entries())"set-cookie"===R.toLowerCase()?(V.push(...Q(l)),F[R]=1===V.length?V[0]:V):F[R]=l;return F}function l(U){try{return String(new URL(String(U)))}catch(F){throw Error(`URL is malformed "${String(U)}". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,{cause:F})}}Object.defineProperty(F,"__esModule",{value:!0}),function(U,F){for(var V in F)Object.defineProperty(U,V,{enumerable:!0,get:F[V]})}(F,{fromNodeOutgoingHttpHeaders:function(){return V},splitCookiesString:function(){return Q},toNodeOutgoingHttpHeaders:function(){return R},validateURL:function(){return l}})},8614:(U,F)=>{"use strict";function V(U,F){let V;if((null==F?void 0:F.host)&&!Array.isArray(F.host))V=F.host.toString().split(":",1)[0];else{if(!U.hostname)return;V=U.hostname}return V.toLowerCase()}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"getHostname",{enumerable:!0,get:function(){return V}})},7176:(U,F)=>{"use strict";function V(U,F,V){if(U)for(let l of(V&&(V=V.toLowerCase()),U)){var Q,R;if(F===(null==(Q=l.domain)?void 0:Q.split(":",1)[0].toLowerCase())||V===l.defaultLocale.toLowerCase()||(null==(R=l.locales)?void 0:R.some(U=>U.toLowerCase()===V)))return l}}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"detectDomainLocale",{enumerable:!0,get:function(){return V}})},2823:(U,F)=>{"use strict";function V(U,F){let V;let Q=U.split("/");return(F||[]).some(F=>!!Q[1]&&Q[1].toLowerCase()===F.toLowerCase()&&(V=F,Q.splice(1,1),U=Q.join("/")||"/",!0)),{pathname:U,detectedLocale:V}}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"normalizeLocalePath",{enumerable:!0,get:function(){return V}})},8277:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"addLocale",{enumerable:!0,get:function(){return l}});let Q=V(9337),R=V(234);function l(U,F,V,l){if(!F||F===V)return U;let d=U.toLowerCase();return!l&&((0,R.pathHasPrefix)(d,"/api")||(0,R.pathHasPrefix)(d,"/"+F.toLowerCase()))?U:(0,Q.addPathPrefix)(U,"/"+F)}},9337:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"addPathPrefix",{enumerable:!0,get:function(){return R}});let Q=V(3415);function R(U,F){if(!U.startsWith("/")||!F)return U;let{pathname:V,query:R,hash:l}=(0,Q.parsePath)(U);return""+F+V+R+l}},5366:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"addPathSuffix",{enumerable:!0,get:function(){return R}});let Q=V(3415);function R(U,F){if(!U.startsWith("/")||!F)return U;let{pathname:V,query:R,hash:l}=(0,Q.parsePath)(U);return""+V+F+R+l}},1704:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"formatNextPathnameInfo",{enumerable:!0,get:function(){return N}});let Q=V(4864),R=V(9337),l=V(5366),d=V(8277);function N(U){let F=(0,d.addLocale)(U.pathname,U.locale,U.buildId?void 0:U.defaultLocale,U.ignorePrefix);return(U.buildId||!U.trailingSlash)&&(F=(0,Q.removeTrailingSlash)(F)),U.buildId&&(F=(0,l.addPathSuffix)((0,R.addPathPrefix)(F,"/_next/data/"+U.buildId),"/"===U.pathname?"index.json":".json")),F=(0,R.addPathPrefix)(F,U.basePath),!U.buildId&&U.trailingSlash?F.endsWith("/")?F:(0,l.addPathSuffix)(F,"/"):(0,Q.removeTrailingSlash)(F)}},5393:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"getNextPathnameInfo",{enumerable:!0,get:function(){return d}});let Q=V(2823),R=V(5793),l=V(234);function d(U,F){var V,d;let{basePath:N,i18n:Z,trailingSlash:e}=null!=(V=F.nextConfig)?V:{},W={pathname:U,trailingSlash:"/"!==U?U.endsWith("/"):e};N&&(0,l.pathHasPrefix)(W.pathname,N)&&(W.pathname=(0,R.removePathPrefix)(W.pathname,N),W.basePath=N);let a=W.pathname;if(W.pathname.startsWith("/_next/data/")&&W.pathname.endsWith(".json")){let U=W.pathname.replace(/^\/_next\/data\//,"").replace(/\.json$/,"").split("/"),V=U[0];W.buildId=V,a="index"!==U[1]?"/"+U.slice(1).join("/"):"/",!0===F.parseData&&(W.pathname=a)}if(Z){let U=F.i18nProvider?F.i18nProvider.analyze(W.pathname):(0,Q.normalizeLocalePath)(W.pathname,Z.locales);W.locale=U.detectedLocale,W.pathname=null!=(d=U.pathname)?d:W.pathname,!U.detectedLocale&&W.buildId&&(U=F.i18nProvider?F.i18nProvider.analyze(a):(0,Q.normalizeLocalePath)(a,Z.locales)).detectedLocale&&(W.locale=U.detectedLocale)}return W}},3415:(U,F)=>{"use strict";function V(U){let F=U.indexOf("#"),V=U.indexOf("?"),Q=V>-1&&(F<0||V<F);return Q||F>-1?{pathname:U.substring(0,Q?V:F),query:Q?U.substring(V,F>-1?F:void 0):"",hash:F>-1?U.slice(F):""}:{pathname:U,query:"",hash:""}}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"parsePath",{enumerable:!0,get:function(){return V}})},234:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"pathHasPrefix",{enumerable:!0,get:function(){return R}});let Q=V(3415);function R(U,F){if("string"!=typeof U)return!1;let{pathname:V}=(0,Q.parsePath)(U);return V===F||V.startsWith(F+"/")}},5793:(U,F,V)=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"removePathPrefix",{enumerable:!0,get:function(){return R}});let Q=V(234);function R(U,F){if(!(0,Q.pathHasPrefix)(U,F))return U;let V=U.slice(F.length);return V.startsWith("/")?V:"/"+V}},4864:(U,F)=>{"use strict";function V(U){return U.replace(/\/$/,"")||"/"}Object.defineProperty(F,"__esModule",{value:!0}),Object.defineProperty(F,"removeTrailingSlash",{enumerable:!0,get:function(){return V}})}};var F=require("../../webpack-runtime.js");F.C(U);var V=U=>F(F.s=U),Q=F.X(0,[948],()=>V(3460));module.exports=Q})();